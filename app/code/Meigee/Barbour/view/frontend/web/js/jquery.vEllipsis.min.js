! function(e) {
    e.fn.vEllipsis = function(i) {
        function t(i, t) {
            function n() {
                if (i.text(l), c && i.append(" ", c), h) {
                    var t = document.createElement("a");
                    t.className = "read-more-link";
                    var n = e(t).append(h);
                    n.on("click", function() {
                        var oldHtml = i.html();
                        if (jQuery(this).closest(".review-box-wrapper").length) {
                            jQuery("body").hasClass("v-ellipsis-collapsing") || (jQuery("html > body").addClass("v-ellipsis-collapsing"), jQuery(this).closest(".review-box-wrapper").find(".customer-rating").slideUp(500), el = jQuery(this).closest(".review-box-inner"), setTimeout(function() {
                                jQuery(el).height() > jQuery(el).find(".review-box").outerHeight(true) + jQuery(el).find(".top-block").outerHeight(true) && jQuery(el).find('.top-block-inner').animate({
                                    "padding-top": (jQuery(el).height() - (jQuery(el).find('.top-block').outerHeight(true) + jQuery(el).find('.review-box').outerHeight(true))) / 2
                                }, 400);
                                jQuery(el).height() > jQuery(el).find(".review-box").outerHeight(true) + jQuery(el).find(".top-block").outerHeight(true) && jQuery(el).find('.bottom-block-inner').animate({
                                    "padding-bottom": (jQuery(el).height() - (jQuery(el).find('.top-block').outerHeight(true) + jQuery(el).find('.review-box').outerHeight(true))) / 2
                                }, 400), jQuery("html > body").removeClass("v-ellipsis-collapsing");
                            }, 550));               
                        }
                        a(i);
                        if (jQuery(i).find('a.read-more-link').length == 2) {
                            jQuery(i).find('a.read-more-link')[0].remove();
                        }
                    }), i.append(" ", n)
                }
            }
            if ((!t.expandLink || i.data("expanded") !== !0) && i.is(":visible")) {
                var l;
                if (i.data("lastHeight") && i.data("lastHeight") === i.height() && i.data("lastWidth") === i.width() && (i.data("lastText") === i.text() || i.data("lastHTML") === i.html())) return;
                i.data("originalText") ? (l = i.data("originalText"), i.text(l)) : (l = i.text(), i.data("originalText", l), i.data("originalHTML", i.html()));
                var o, s = i.attr("class").split(/\s+/),
                    r = t.lines,
                    d = new RegExp("^" + t.linesClass + "-(\\d+)$");
                if (e.each(s, function(e, i) {
                        o = i.match(d), null !== o && (r = Number(o[1]))
                    }), t.additionalEnding && i.data("link")) var c = i.data("link");
                if (t.expandLink && i.data("expandlink")) var h = i.data("expandlink");
                if (1 > r) l = "", i.text("");
                else {
                    var p = l,
                        u = p.length,
                        m = i.height();
                    i.text("a");
                    var g = parseFloat(i.css("lineHeight"), 10),
                        v = i.height(),
                        f = g > v ? g - v : 0,
                        w = f * (r - 1) + v * r;
                    if (w >= m) return i.text(l), i.data("lastText", l), i.data("lastHeight", i.height()), void i.data("lastWidth", i.width());
                    var x = (w + v) / (m - (v + f));
                    x > 1 && (x = 1);
                    var T = Math.ceil(x * u);
                    l = l.slice(0, T);
                    var y = t["char"];
                    c && (i.html(c), y += " " + i.text()), h && (i.html(h), y += " " + i.text());
                    for (var k = 1 === r ? 0 : Math.ceil(T / 2), H = 0, E = T - 1; k + t.tolerance - 1 < E;) H = Math.ceil((k + E) / 2), i.text(l.slice(0, H) + y), i.height() <= w ? k = H : E = H - t.tolerance;
                    l = l.slice(0, k), t.onlyFullWords && (l = l.replace(/\s([^\s.]+)$/, "")), l = l.replace(/([:.,\s]+$)/g, ""), l += t["char"]
                }
                if (0 != t.animationTime && i.data("collapsing")) {
                    var b = i.outerHeight();
                    i.html(i.data("originalHTML")).css("height", i.outerHeight()).animate({
                        height: b
                    }, parseInt(t.animationTime), function() {
                        i.css("height", ""), n()
                    })
                } else n();
                i.data("lastText", l), i.data("lastHTML", i.html()), i.data("lastHeight", i.height()), i.data("lastWidth", i.width()), t.callback.call(i[0])
            }
        }

        function a(t) {
            if (0 != i.animationTime) var a = t.outerHeight();
            if (t.html(t.data("originalHTML")), 0 != i.animationTime) {
                var l = t.outerHeight();
                t.css("height", a).animate({
                    height: l
                }, parseInt(i.animationTime), function() {
                    t.css("height", "")
                })
            }
            if (i.expandLink && t.data("collapselink")) {
                var o = document.createElement("a");
                o.className = "read-more-link";
                var s = t.data("collapselink"),
                    r = e(o).append(s);
                r.className = "read-more-link", r.on("click", function() {
                    if (jQuery(this).closest(".review-box-wrapper").length) {
                        jQuery(this).closest(".review-box-wrapper").find(".customer-rating").slideDown(500), jQuery(this).closest(".review-box-inner").find('.top-block-inner').animate({
                            "padding-top": 0
                        }, 500);
                        jQuery(this).closest(".review-box-inner").find('.bottom-block-inner').animate({
                            "padding-bottom": 0
                        }, 500)} 
                    n(t);
                }), t.append(" ", r), t.data("expanded", !0);
            }
        }

        function n(e) {
            e.removeData("expanded").data("collapsing", !0), t(e, i), e.removeData("collapsing")
        }

        function l(z) {
            d = e(window).scrollTop(), c = d + e(window).height(), e(i.element).each(function() {
                var z = e(this);
                if (jQuery(z).data('collapse-open') !== undefined) {
                    if (jQuery(z).data('collapse-open') && !jQuery(z).find('a.read-more-link').length) {
                        a(z);
                    } else {
                        t(z, i);
                    }
                } else {
                    t(z, i);
                }
            })
        }

        function o() {
            clearTimeout(s), s = setTimeout(function() {
                l()
            }, i.delay)
        }
        if (window.vEllipsis) return window.vEllipsis.options = e.extend(window.vEllipsis.options, i), void e(document).trigger("vEllipsisCreate");
        window.vEllipsis = {}, window.vEllipsis.options = {
            element: ".v-ellipsis",
            lines: 1,
            onlyFullWords: !1,
            "char": "...",
            callback: function() {},
            responsive: !1,
            tolerance: 5,
            delay: 300,
            elementEvent: "change",
            additionalEnding: !1,
            expandLink: !1,
            collapseLink: !1,
            animationTime: "0",
            linesClass: "v-ellipsis-lines"
        }, e(document).on("vEllipsisCreate", function() {
            l()
        });
        var s, r, i, d = e(window).scrollTop(),
            c = d + e(window).height();
        return window.vEllipsis.options = i = e.extend(window.vEllipsis.options, i), i.tolerance < 1 && (i.tolerance = 1), i.responsive && e(window).resize(function() {
            // o()
        }), e(window).on("scroll", function() {
            clearTimeout(r), r = setTimeout(function() {
               // l()
            }, 100)
        }), e(document).on(i.elementEvent, i.element, function() {
            var a = e(this);
            a.data("originalText", a.text()), a.data("originalHTML", a.html()), t(a, i)
        }), l(), this
    }
}(jQuery);
